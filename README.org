#+title: Stark Bank Challenge

Project meant to create an =Integration= with the [[https://starkbank.com/docs/api#introduction][Stark Bank API]].

We will be using the [[https://github.com/starkbank/sdk-clojure][Clojure API]].

* Specification
#+begin_quote
Create a =Project= and =Webhook endpoint= for that account and develop a simple app integration using
whichever language you prefer that:

1. Issues 8 to 12 Invoices every 3 hours to random people for 24 hours (our Sandbox
emulation environment will make sure some of those are automatically paid);

2. Receives the =webhook callback= of the Invoice credit and sends the received amount
(minus eventual fees) to the following account using a Transfer:

    a. bank code: 20018183

    b. branch: 0001

    c. account: 6341320293482496

    d. name: Stark Bank S.A.

    e. tax ID: 20.018.183/0001-80

    f. account type: payment
#+end_quote


* API end-points
** Base URL:
https://sandbox.api.starkbank.com

* Using generated private-key

Using =clojure.core/slurp=, we can catch the contents of the =privateKey.pem= file. For example, we could print it, to make sure we are catching meaning content.

#+begin_src clojure :eval no
(clojure.pprint/pprint (slurp "resources/keys/privateKey.pem"))
(println (slurp "resources/keys/privateKey.pem"))

(with-open [rdr (clojure.java.io/reader "resources/keys/privateKey.pem")]
  (reduce conj [] (line-seq rdr)))
#+end_src
